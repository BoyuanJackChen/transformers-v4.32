[
   {
      "task_id": 4500,
      "prompt": "Complete the Python function given the prompt below:\nAn elementary school student Takahashi has come to a variety store.\nHe has two coins, A-yen and B-yen coins (yen is the currency of Japan), and wants to buy a toy that costs C yen. Can he buy it?\nNote that he lives in Takahashi Kingdom, and may have coins that do not exist in Japan.\n-----Constraints-----\n - All input values are integers.\n - 1 \\leq A, B \\leq 500\n - 1 \\leq C \\leq 1000\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C\n-----Output-----\nIf Takahashi can buy the toy, print Yes; if he cannot, print No.\n-----Sample Input-----\n50 100 120\n-----Sample Output-----\nYes\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\n\ndef",
      "answer": "def buy_toy(a, b, c):\n    if a + b > c:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4501,
      "prompt": "Complete the Python function given the prompt below:\nTak has N cards. On the i-th (1 \\leq i \\leq N) card is written an integer x_i.\nHe is selecting one or more cards from these N cards, so that the average of the integers written on the selected cards is exactly A.\nIn how many ways can he make his selection?\n-----Constraints-----\n - 1 \\leq N \\leq 50\n - 1 \\leq A \\leq 50\n - 1 \\leq x_i \\leq 50\n - N,\\,A,\\,x_i are integers.\n-----Partial Score-----\n - 200 points will be awarded for passing the test set satisfying 1 \\leq N \\leq 16.\n-----Input-----\nThe input is given from Standard Input in the following format:\nN A\nx_1 x_2... x_N\n-----Output-----\nPrint the number of ways to select cards such that the average of the written integers is exactly A.\n-----Sample Input-----\n4 8\n7 9 8 9\n-----Sample Output-----\n5\n - The following are the 5 ways to select cards such that the average is 8:\n - Select the 3-rd card.\n - Select the 1-st and 2-nd cards.\n - Select the 1-st and 4-th cards.\n - Select the 1-st, 2-nd and 3-rd cards.\n - Select the 1-st, 3-rd and 4-th cards.\n\ndef",
      "answer": "def count_ways(n, a):\n    if n == 0:\n        return 1\n    if n == 1:\n        return a\n    if n == 2:\n        return a + a\n    if n == 3:\n        return a + a + a\n    if n == 4:\n        return a + a + a + a\n    if n == 5:\n        return a + a + a + a + a\n    return count_ways(n - 1, a) + count_ways(n - 2, a) + count_ways(n - 3, a) + count_ways(n - 4, a) + count_ways(n - 5, a)\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4502,
      "prompt": "Complete the Python function given the prompt below:\nYou are given an integer sequence of length n, a_1,..., a_n.\nLet us consider performing the following n operations on an empty sequence b.\nThe i-th operation is as follows:\n - Append a_i to the end of b.\n - Reverse the order of the elements in b.\nFind the sequence b obtained after these n operations.\n-----Constraints-----\n - 1 \\leq n \\leq 2\\times 10^5\n - 0 \\leq a_i \\leq 10^9\n - n and a_i are integers.\n-----Input-----\nInput is given from Standard Input in the following format:\nn\na_1 a_2... a_n\n-----Output-----\nPrint n integers in a line with spaces in between.\nThe i-th integer should be b_i.\n-----Sample Input-----\n4\n1 2 3 4\n-----Sample Output-----\n4 2 1 3\n - After step 1 of the first operation, b becomes: 1.\n - After step 2 of the first operation, b becomes: 1.\n - After step 1 of the second operation, b becomes: 1, 2.\n - After step 2 of the second operation, b becomes: 2, 1.\n - After step 1 of the third operation, b becomes: 2, 1, 3.\n - After step 2 of the third operation, b becomes: 3, 1, 2.\n - After step 1 of the fourth operation, b becomes: 3, 1, 2, 4.\n - After step 2 of the fourth operation, b becomes: 4, 2, 1, 3.\nThus, the answer is 4 2 1 3.\n\ndef",
      "answer": "def reverse(arr):\n    return arr[::-1]\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4503,
      "prompt": "Complete the Python function given the prompt below:\nRaccoon is fighting with a monster.\nThe health of the monster is H.\nRaccoon can use N kinds of special moves. Using the i-th move decreases the monster's health by A_i.\nThere is no other way to decrease the monster's health.\nRaccoon wins when the monster's health becomes 0 or below.\nIf Raccoon can win without using the same move twice or more, print Yes; otherwise, print No.\n-----Constraints-----\n - 1 \\leq H \\leq 10^9\n - 1 \\leq N \\leq 10^5\n - 1 \\leq A_i \\leq 10^4\n - All values in input are integers.\n-----Input-----\nInput is given from Standard Input in the following format:\nH N\nA_1 A_2... A_N\n-----Output-----\nIf Raccoon can win without using the same move twice or more, print Yes; otherwise, print No.\n-----Sample Input-----\n10 3\n4 5 6\n-----Sample Output-----\nYes\nThe monster's health will become 0 or below after, for example, using the second and third moves.\n\ndef",
      "answer": "def raccoon(H, N, A_1, A_2, A_3):\n    if H <= 0:\n        return \"No\"\n    if N == 1:\n        if A_1 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 2:\n        if A_1 == 0 and A_2 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 3:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 4:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 5:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 6:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 7:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 8:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 9:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 10:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0 and A_10 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 11:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0 and A_10 == 0 and A_11 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 12:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0 and A_10 == 0 and A_11 == 0 and A_12 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 13:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0 and A_10 == 0 and A_11 == 0 and A_12 == 0 and A_13 == 0:\n            return \"Yes\"\n        else:\n            return \"No\"\n    if N == 14:\n        if A_1 == 0 and A_2 == 0 and A_3 == 0 and A_4 == 0 and A_5 == 0 and A_6 == 0 and A_7 == 0 and A_8 == 0 and A_9 == 0 and A_10 == 0 and A_11 == 0 and A_12 == 0 and A_13 == 0 and A_14 == 0:\n            return \"Yes\"\n        else:\n            return",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4504,
      "prompt": "Complete the Python function given the prompt below:\nWe will call a string that can be obtained by concatenating two equal strings an even string.\nFor example, xyzxyz and aaaaaa are even, while ababab and xyzxy are not.\nYou are given an even string S consisting of lowercase English letters.\nFind the length of the longest even string that can be obtained by deleting one or more characters from the end of S.\nIt is guaranteed that such a non-empty string exists for a given input.\n-----Constraints-----\n - 2 \\leq |S| \\leq 200\n - S is an even string consisting of lowercase English letters.\n - There exists a non-empty even string that can be obtained by deleting one or more characters from the end of S.\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n-----Output-----\nPrint the length of the longest even string that can be obtained.\n-----Sample Input-----\nabaababaab\n-----Sample Output-----\n6\n - abaababaab itself is even, but we need to delete at least one character.\n - abaababaa is not even.\n - abaababa is not even.\n - abaabab is not even.\n - abaaba is even. Thus, we should print its length, 6.\n\ndef",
      "answer": "def even_string(s):\n    if len(s) % 2 == 0:\n        return len(s)\n    else:\n        return len(s) - 1\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4505,
      "prompt": "Complete the Python function given the prompt below:\nYou are given a string S of length 3 consisting of a, b and c. Determine if S can be obtained by permuting abc.\n-----Constraints-----\n - |S|=3\n - S consists of a, b and c.\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n-----Output-----\nIf S can be obtained by permuting abc, print Yes; otherwise, print No.\n-----Sample Input-----\nbac\n-----Sample Output-----\nYes\nSwapping the first and second characters in bac results in abc.\n\ndef",
      "answer": "def swap(s):\n    return s[1] + s[0] + s[2]\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4506,
      "prompt": "Complete the Python function given the prompt below:\nYou are given two arrays $a$ and $b$, both of length $n$.\nLet's define a function $f(l, r) = \\sum\\limits_{l \\le i \\le r} a_i \\cdot b_i$.\nYour task is to reorder the elements (choose an arbitrary order of elements) of the array $b$ to minimize the value of $\\sum\\limits_{1 \\le l \\le r \\le n} f(l, r)$. Since the answer can be very large, you have to print it modulo $998244353$. Note that you should minimize the answer but not its remainder.\n-----Input-----\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of elements in $a$ and $b$.\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^6$), where $a_i$ is the $i$-th element of $a$.\nThe third line of the input contains $n$ integers $b_1, b_2, \\dots, b_n$ ($1 \\le b_j \\le 10^6$), where $b_j$ is the $j$-th element of $b$.\n-----Output-----\nPrint one integer \u2014 the minimum possible value of $\\sum\\limits_{1 \\le l \\le r \\le n} f(l, r)$ after rearranging elements of $b$, taken modulo $998244353$. Note that you should minimize the answer but not its remainder.\n-----Examples-----\nInput\n5\n1 8 7 2 4\n9 7 2 9 3\nOutput\n646\nInput\n1\n1000000\n1000000\nOutput\n757402647\nInput\n2\n1 3\n4 2\nOutput\n20\n\ndef",
      "answer": "def f(a, b):\n    return sum(a) * sum(b)\n\n",
      "difficulty": "introductory",
      "split": "test"
   }
]