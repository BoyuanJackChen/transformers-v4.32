[
   {
      "task_id": 4100,
      "prompt": "Complete the Python function given the prompt below:\nTakahashi has decided to hold fastest-finger-fast quiz games. Kizahashi, who is in charge of making the scoreboard, is struggling to write the program that manages the players' scores in a game, which proceeds as follows.\nA game is played by N players, numbered 1 to N. At the beginning of a game, each player has K points.\nWhen a player correctly answers a question, each of the other N-1 players receives minus one (-1) point. There is no other factor that affects the players' scores.\nAt the end of a game, the players with 0 points or lower are eliminated, and the remaining players survive.\nIn the last game, the players gave a total of Q correct answers, the i-th of which was given by Player A_i.\nFor Kizahashi, write a program that determines whether each of the N players survived this game.\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 10^5\n - 1 \\leq K \\leq 10^9\n - 1 \\leq Q \\leq 10^5\n - 1 \\leq A_i \\leq N\\ (1 \\leq i \\leq Q)\n-----Input-----\nInput is given from Standard Input in the following format:\nN K Q\nA_1\nA_2\n.\n.\n.\nA_Q\n-----Output-----\nPrint N lines. The i-th line should contain Yes if Player i survived the game, and No otherwise.\n-----Sample Input-----\n6 3 4\n3\n1\n3\n2\n-----Sample Output-----\nNo\nNo\nYes\nNo\nNo\nNo\nIn the beginning, the players' scores are (3, 3, 3, 3, 3, 3).\n - Player 3 correctly answers a question. The players' scores are now (2, 2, 3, 2, 2, 2).\n - Player 1 correctly answers a question. The players' scores are now (2, 1, 2, 1, 1, 1).\n - Player 3 correctly answers a question. The players' scores are now (1, 0, 2, 0, 0, 0).\n - Player 2 correctly answers a question. The players' scores are now (0, 0, 1, -1, -1, -1).\nPlayers 1, 2, 4, 5 and 6, who have 0 points or lower, are eliminated, and Player 3 survives this game.\n\ndef",
      "answer": "def game(n, k, q):\n    scores = [0] * n\n    for i in range(n):\n        scores[i] = k\n    for i in range(q):\n        a = int(input())\n        if scores[a - 1] > 0:\n            scores[a - 1] -= 1\n    for i in range(n):\n        if scores[i] == 0:\n            print(\"No\")\n        else:\n            print(\"Yes\")\n\n",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4101,
      "prompt": "Complete the Python function given the prompt below:\nYou are given a binary matrix $a$ of size $n \\times m$. A binary matrix is a matrix where each element is either $0$ or $1$.\nYou may perform some (possibly zero) operations with this matrix. During each operation you can inverse the row of this matrix or a column of this matrix. Formally, inverting a row is changing all values in this row to the opposite ($0$ to $1$, $1$ to $0$). Inverting a column is changing all values in this column to the opposite.\nYour task is to sort the initial matrix by some sequence of such operations. The matrix is considered sorted if the array $[a_{1, 1}, a_{1, 2}, \\dots, a_{1, m}, a_{2, 1}, a_{2, 2}, \\dots, a_{2, m}, \\dots, a_{n, m - 1}, a_{n, m}]$ is sorted in non-descending order.\n-----Input-----\nThe first line of the input contains two integers $n$ and $m$ ($1 \\le n, m \\le 200$) \u2014 the number of rows and the number of columns in the matrix.\nThe next $n$ lines contain $m$ integers each. The $j$-th element in the $i$-th line is $a_{i, j}$ ($0 \\le a_{i, j} \\le 1$) \u2014 the element of $a$ at position $(i, j)$.\n-----Output-----\nIf it is impossible to obtain a sorted matrix, print \"NO\" in the first line.\nOtherwise print \"YES\" in the first line. In the second line print a string $r$ of length $n$. The $i$-th character $r_i$ of this string should be '1' if the $i$-th row of the matrix is inverted and '0' otherwise. In the third line print a string $c$ of length $m$. The $j$-th character $c_j$ of this string should be '1' if the $j$-th column of the matrix is inverted and '0' otherwise. If there are multiple answers, you can print any.\n-----Examples-----\nInput\n2 2\n1 1\n0 1\nOutput\nYES\n00\n10\nInput\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\nOutput\nYES\n010\n0000\nInput\n3 3\n0 0 0\n1 0 1\n1 1 0\nOutput\nNO\n\ndef",
      "answer": "def sort_matrix(a):\n    n = len(a)\n    m = len(a[0])\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                a[i][j] = 1\n            else:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                a[i][j] = 0\n            else:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j]",
      "difficulty": "introductory",
      "split": "test"
   },
   {
      "task_id": 4102,
      "prompt": "Complete the Python function given the prompt below:\n-----Input-----\nThe only line of the input contains a string of digits. The length of the string is between 1 and 10, inclusive.\n-----Output-----\nOutput \"Yes\" or \"No\".\n-----Examples-----\nInput\n373\nOutput\nYes\nInput\n121\nOutput\nNo\nInput\n436\nOutput\nYes\n\ndef",
      "answer": "def check_string(string):\n    if len(string) > 10 or len(string) < 1:\n        return \"No\"\n    else:\n        return \"Yes\"\n\n",
      "difficulty": "introductory",
      "split": "test"
   }
]